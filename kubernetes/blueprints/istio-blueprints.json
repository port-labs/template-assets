[
    {
       "identifier":"cluster",
       "description":"This blueprint represents a Kubernetes Cluster",
       "title":"Cluster",
       "icon":"Cluster",
       "schema":{
          "properties":{
             
          },
          "required":[
             
          ]
       },
       "mirrorProperties":{
          
       },
       "calculationProperties":{
          
       },
       "relations":{
          
       }
    },
    {
       "identifier":"node",
       "description":"This blueprint represents a k8s Node",
       "title":"Node",
       "icon":"Node",
       "schema":{
          "properties":{
             "creationTimestamp":{
                "type":"string",
                "icon":"DeployedAt",
                "title":"Created",
                "format":"date-time",
                "description":"When the Node was created (added to the cluster)"
             },
             "labels":{
                "type":"object",
                "title":"Labels",
                "description":"Labels of the Node"
             },
             "ready":{
                "type":"string",
                "title":"Node Readiness",
                "description":"Node ready status",
                "enum":[
                   "True",
                   "False",
                   "Unknown"
                ],
                "enumColors":{
                   "False":"red",
                   "True":"green",
                   "Unknown":"yellow"
                }
             },
             "totalMemory":{
                "type":"string",
                "icon":"GPU",
                "title":"Total Memory (kibibytes)",
                "description":"Total memory capacity of the Node"
             },
             "kubeletVersion":{
                "type":"string",
                "title":"Kubelet Version",
                "description":"The node's kubelet version"
             },
             "totalCPU":{
                "type":"string",
                "icon":"CPU",
                "title":"Total CPU (milli-cores)",
                "description":"Total CPU capacity of the Node"
             }
          },
          "required":[
             
          ]
       },
       "mirrorProperties":{
          
       },
       "calculationProperties":{
          
       },
       "relations":{
          "Cluster":{
             "title":"Cluster",
             "target":"cluster",
             "required":false,
             "many":true
          }
       }
    },
    {
       "identifier":"namespace",
       "description":"This blueprint represents a k8s Namespace",
       "title":"Namespace",
       "icon":"Environment",
       "schema":{
          "properties":{
             "creationTimestamp":{
                "type":"string",
                "title":"Created",
                "format":"date-time",
                "description":"When the Namespace was created"
             },
             "labels":{
                "type":"object",
                "title":"Labels",
                "description":"Labels of the Namespace"
             }
          },
          "required":[
             
          ]
       },
       "mirrorProperties":{
          
       },
       "calculationProperties":{
          
       },
       "relations":{
          "Cluster":{
             "title":"Cluster",
             "description":"The namespace's Kubernetes cluster",
             "target":"cluster",
             "required":false,
             "many":false
          }
       }
    },
    {
       "identifier": "workload",
       "description": "This blueprint represents a k8s Workload. This includes all k8s objects which can create pods (deployments[replicasets], daemonsets, statefulsets...)",
       "title": "Workload",
       "icon": "Deployment",
       "schema": {
         "properties": {
           "workloadJson": {
             "title": "Workload Json",
             "type": "object",
             "description": "The workloads json"
           },
           "availableReplicas": {
             "type": "number",
             "title": "Running Replicas",
             "description": "Current running replica count"
           },
           "containers": {
             "type": "array",
             "title": "Containers",
             "default": [],
             "description": "The containers for each pod instance of the Workload"
           },
           "creationTimestamp": {
             "type": "string",
             "title": "Created",
             "format": "date-time",
             "description": "When the Workload was created"
           },
           "labels": {
             "type": "object",
             "title": "Labels",
             "description": "Labels of the Workload"
           },
           "replicas": {
             "type": "number",
             "title": "Wanted Replicas",
             "description": "Wanted replica count"
           },
           "strategy": {
             "type": "string",
             "title": "Strategy",
             "description": "Rollout Strategy"
           },
           "hasPrivileged": {
             "type": "boolean",
             "title": "Has Privileged Container"
           },
           "hasLatest": {
             "type": "boolean",
             "title": "Has 'latest' tag",
             "description": "Has Container with 'latest' as image tag"
           },
           "hasLimits": {
             "type": "boolean",
             "title": "All containers have limits"
           },
           "isHealthy": {
             "type": "string",
             "enum": [
               "Healthy",
               "Unhealthy"
             ],
             "enumColors": {
               "Healthy": "green",
               "Unhealthy": "red"
             },
             "title": "Workload Health"
           },
           "kind": {
             "title": "Workload Kind",
             "description": "The kind of Workload",
             "type": "string",
             "enum": [
               "StatefulSet",
               "DaemonSet",
               "Deployment",
               "ReplicaSet"
             ]
           },
           "strategyConfig": {
             "type": "object",
             "title": "Strategy Config",
             "description": "The workloads rollout strategy"
           }
         },
         "required": []
       },
       "mirrorProperties": {
         "Cluster": {
           "title": "Cluster",
           "path": "Namespace.Cluster.$title"
         },
         "namespace": {
           "title": "Namespace",
           "path": "Namespace.$title"
         }
       },
       "calculationProperties": {},
       "relations": {
         "workloadManager": {
           "title": "Manager",
           "description": "A replicaset's workload. For example, Workload abc-ReplicaSet is managed by Workload xyz-Depolyment",
           "target": "workload",
           "required": false,
           "many": false
         },
         "Namespace": {
           "title": "Namespace",
           "target": "namespace",
           "required": false,
           "many": false
         }
       }
    },
    {
       "identifier":"pod",
       "description":"This blueprint represents a k8s Pod",
       "title":"Pod",
       "icon":"Service",
       "schema":{
          "properties":{
             "conditions":{
                "type":"array",
                "title":"Conditions",
                "default":[
                   
                ],
                "description":"Pod's conditions"
             },
             "labels":{
                "type":"object",
                "title":"Labels",
                "description":"Labels of the Pod"
             },
             "phase":{
                "type":"string",
                "title":"Pod phase",
                "description":"Pod's running phase"
             },
             "startTime":{
                "type":"string",
                "title":"Created",
                "format":"date-time",
                "description":"Pod's creation date"
             }
          },
          "required":[
             
          ]
       },
       "mirrorProperties":{
          "containers":{
             "title":"Containers",
             "path":"workload.containers"
          },
          "cluster":{
             "title":"Cluster",
             "path":"workload.Namespace.Cluster.$identifier"
          },
          "namespace":{
             "title":"Namespace",
             "path":"workload.Namespace.$title"
          }
       },
       "calculationProperties":{
          
       },
       "relations":{
          "Node":{
             "title":"Node",
             "description":"The node the pod is running on",
             "target":"node",
             "required":false,
             "many":false
          },
          "workload":{
             "title":"Workload",
             "description":"The workload responsible for the pod",
             "target":"workload",
             "required":false,
             "many":false
          }
       }
    },
    {
        "identifier": "gateways",
        "description": "This blueprint represents a service in our software catalog",
        "title": "Istio Gateways",
        "icon": "Cloud",
        "schema": {
          "properties": {
            "name": {
              "type": "string"
            },
            "ports": {
              "type": "array"
            },
            "labels": {
              "type": "object"
            },
            "selector": {
              "type": "object"
            }
          },
          "required": []
        },
        "mirrorProperties": {},
        "calculationProperties": {},
        "relations": {
          "namespace": {
            "target": "Namespace",
            "required": true,
            "many": false
          }
        }
      },
      {
        "identifier": "virtualServices",
        "description": "This blueprint represents a service in our software catalog",
        "title": "Virtual Services",
        "icon": "Istio",
        "schema": {
          "properties": {
            "hosts": {
              "type": "array"
            },
            "match": {
              "type": "array"
            },
            "labels": {
              "type": "object"
            }
          },
          "required": []
        },
        "mirrorProperties": {},
        "calculationProperties": {},
        "relations": {
          "gateways": {
            "target": "gateways",
            "required": true,
            "many": true
          },
          "services": {
            "target": "Service",
            "required": false,
            "many": true
          }
        }
      }
 ]
