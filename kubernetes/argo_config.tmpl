  # ArgoCD configuration
  - kind: argoproj.io/v1alpha1/applications
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            blueprint: '"argocdApp"'
            title: .metadata.name
            properties:
              status: .status.health.status
              syncStatus: .status.sync.status
              syncPolicy: .spec.syncPolicy // null
              gitRepo: .spec.source.repoURL// null
              gitPath: .spec.source.path // null
              gitRev: .status.sync.revision // null
            relations:
              workload: '(.spec.destination.namespace as $namespace | .status.resources | map(select(.kind == "Deployment" or .kind == "StatefuleSet" or .kind == "DaemonSet" or .kind == "Rollout" )) | .[] | .name + "-" + .kind + "-" + $namespace + "-{CLUSTER_NAME}") // []'
              argocdProject: .spec.project + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
              destinationNamespace: .spec.destination.namespace + "-" + "{CLUSTER_NAME}"

  - kind: argoproj.io/v1alpha1/appproject
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"argocdProject"'
            properties:
            relations:
              Namespace: .metadata.namespace + "-" + "{CLUSTER_NAME}"

  - kind: v1/secrets
    selector:
      query: '.metadata.labels // {} | contains({ "argocd.argoproj.io/secret-type": "repository" })'
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"argocdRepo"'
            properties:
              repoUrl: .data.url | @base64d
              repoType: .data.type | @base64d
            relations:
              Namespace: .metadata.namespace + "-" + "{CLUSTER_NAME}"
